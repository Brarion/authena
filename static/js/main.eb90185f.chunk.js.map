{"version":3,"sources":["models/types.ts","routes/config.ts","mock/mock.ts","models/breadCrumbs/breadCrumbs.ts","mock/courseMock.ts","models/course/course.ts","models/calendar/calendar.ts","mock/taskMock.ts","models/search/search.ts","models/user/user.ts","models/task/task.ts","models/index.ts","routes/routes.tsx","browserHistory/browserHistory.ts","index.tsx"],"names":["TaskType","Status","routes","title","path","exact","component","lazy","then","page","default","Courses","Course","Task","CompletedCourses","Calendar","Statistics","Help","Error404","routesPaths","courses","completedCourses","calendar","statistics","help","menuRoutesPaths","coursesMock","id","percents","years","start","end","semester","teachers","name","surname","patronymic","countOfWorks","calendarWorksMock","date","Date","works","allCount","count","checkingCount","percent","breadCrumbsDomain","createDomain","setPath","createEvent","addPath","addFullPath","$path","createStore","on","item","_","fullPath","breadCrumbsModel","$store","combine","input","CourseMock","authors","tasks","period","countOfTry","status","FOUR","type","TEST","DONE","MANUAL_CHECK","WAITING","AUTOMATIC_CHECK","resources","getCourseFx","createReEffect","handler","a","promise","Promise","resolve","reject","setTimeout","course","catch","error","res","courseGate","createGate","$currentCourse","doneData","forward","from","open","to","courseModel","currentCourse","pending","calendarDomain","setMonth","setYear","decMonth","incMonth","setDay","$currentYear","getFullYear","year","$currentMonth","getMonth","month","currentMonth","$currentDay","getDate","updates","$monthCalendar","today","predMonday","getDay","Number","Array","fill","map","firstMonday","index","$currentWorks","currentDayWorks","find","dayWorks","sample","source","currentYear","clock","target","fn","currentDay","TaskStatus","calendarModel","monthCalendar","currentWorks","gate","searchDomain","setSearch","$search","search","reset","searchModel","$user","userModel","user","TaskMock","courseName","courseID","FIVE","statusDate","teacher","deadline","five","four","getTaskFx","task","taskGate","$task","taskModel","guard","filter","store","Routes","React","useEffect","console","log","route","location","pathname","split","pop","fallback","browserHistory","createBrowserHistory","Index","history","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb90185f.chunk.js","sourcesContent":["export type FIO = {\r\n  name: string\r\n  surname: string\r\n  patronymic?: string\r\n}\r\n\r\nexport enum TaskType {\r\n  TEST = 'TEST',\r\n  MANUAL_CHECK = 'MANUAL_CHECK',\r\n  AUTOMATIC_CHECK = 'AUTOMATIC_CHECK',\r\n}\r\n\r\nexport enum Status {\r\n  FIVE = 'выполнено успешно, оценка 5',\r\n  FOUR = 'выполнено успешно, оценка 4',\r\n  DONE = 'выполнено успешно',\r\n  WAITING = 'ожидает выполнения',\r\n}\r\n\r\nexport type Task = {\r\n  id: string\r\n  name: string\r\n  period: [Date, Date]\r\n  countOfTry: [number, number]\r\n  status: Status\r\n  type: TaskType\r\n}\r\n\r\nexport type Resource = string","import { lazy } from 'react'\r\nimport { AppRoute } from './types'\r\n\r\nconst Courses = lazy(() => import('../pages/courses/index').then((page) => ({ default: page.Courses })))\r\nconst Course = lazy(() => import('../pages/course/index').then((page) => ({ default: page.Course })))\r\nconst Task = lazy(() => import('../pages/task/index').then((page) => ({ default: page.Task })))\r\nconst CompletedCourses = lazy(() =>\r\n  import('../pages/completedCourses/index').then((page) => ({ default: page.CompletedCourses }))\r\n)\r\nconst Calendar = lazy(() => import('../pages/calendar/index').then((page) => ({ default: page.Calendar })))\r\nconst Statistics = lazy(() => import('../pages/statistics/index').then((page) => ({ default: page.Statistics })))\r\nconst Help = lazy(() => import('../pages/help/index').then((page) => ({ default: page.Help })))\r\nconst Error404 = lazy(() => import('../pages/error/index').then((page) => ({ default: page.Error404 })))\r\n\r\nexport const routes: AppRoute[] = [\r\n  {\r\n    title: 'Текущие курсы',\r\n    path: '/courses',\r\n    exact: true,\r\n    component: Courses,\r\n  },\r\n  {\r\n    title: 'Задание',\r\n    path: '/courses/:id',\r\n    exact: true,\r\n    component: Course,\r\n  },\r\n  {\r\n    title: 'Курс',\r\n    path: '/courses/:courseID/:taskID',\r\n    exact: true,\r\n    component: Task,\r\n  },\r\n  {\r\n    title: 'Успешно завершенные курсы',\r\n    path: '/completedCourses',\r\n    exact: true,\r\n    component: CompletedCourses,\r\n  },\r\n  {\r\n    title: 'Календарь',\r\n    path: '/calendar',\r\n    exact: true,\r\n    component: Calendar,\r\n  },\r\n  {\r\n    title: 'Статистика',\r\n    path: '/statistics',\r\n    exact: true,\r\n    component: Statistics,\r\n  },\r\n  {\r\n    title: 'Справка',\r\n    path: '/help',\r\n    exact: true,\r\n    component: Help,\r\n  },\r\n  {\r\n    title: 'Ошибка 404',\r\n    path: '/404',\r\n    exact: true,\r\n    component: Error404,\r\n  },\r\n]\r\n\r\nexport const routesPaths = {\r\n  courses: {\r\n    title: 'Текущие курсы',\r\n    path: '/courses',\r\n  },\r\n  completedCourses: {\r\n    title: 'Успешно завершенные курсы',\r\n    path: '/completedCourses',\r\n  },\r\n  calendar: {\r\n    title: 'Календарь',\r\n    path: '/calendar',\r\n  },\r\n  statistics: {\r\n    title: 'Статистика',\r\n    path: '/statistics',\r\n  },\r\n  help: {\r\n    title: 'Справка',\r\n    path: '/help',\r\n  },\r\n}\r\n\r\nexport const menuRoutesPaths: Array<{ title: string; path: string }> = [\r\n  {\r\n    title: 'Календарь',\r\n    path: '/calendar',\r\n  },\r\n  {\r\n    title: 'Курсы',\r\n    path: '/courses',\r\n  },\r\n  {\r\n    title: 'Статистика',\r\n    path: '/statistics',\r\n  },\r\n  {\r\n    title: 'Справка',\r\n    path: '/help',\r\n  },\r\n]\r\n","// TODO remove src/move\r\n\r\ntype CourseCard = {\r\n  id: number\r\n  title: string\r\n  percents: number\r\n  years: { start: number; end: number }\r\n  semester: number\r\n  teachers: Array<{ name: string; surname: string; patronymic?: string }>\r\n  countOfWorks: number\r\n}\r\n\r\nexport const coursesMock: CourseCard[] = [\r\n  {\r\n    id: 0,\r\n    title: 'Механика',\r\n    percents: 95,\r\n    years: { start: 2020, end: 2021 },\r\n    semester: 1,\r\n    teachers: [\r\n      { name: 'Александр', surname: 'Черкасов', patronymic: 'Васильевич' },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n      },\r\n    ],\r\n    countOfWorks: 6,\r\n  },\r\n  {\r\n    id: 1,\r\n    title: 'Молекулярная физика и термодинамика',\r\n    percents: 87,\r\n    years: { start: 2020, end: 2021 },\r\n    semester: 1,\r\n    teachers: [\r\n      { name: 'Александр', surname: 'Черкасов', patronymic: 'Васильевич' },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n        patronymic: 'Константинович',\r\n      },\r\n    ],\r\n    countOfWorks: 6,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Электродинамика',\r\n    percents: 60,\r\n    years: { start: 2020, end: 2021 },\r\n    semester: 1,\r\n    teachers: [\r\n      { name: 'Александр', surname: 'Черкасов', patronymic: 'Васильевич' },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n        patronymic: 'Константинович',\r\n      },\r\n    ],\r\n    countOfWorks: 6,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Механика',\r\n    percents: 31,\r\n    years: { start: 2020, end: 2021 },\r\n    semester: 1,\r\n    teachers: [\r\n      { name: 'Александр', surname: 'Черкасов', patronymic: 'Васильевич' },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n        patronymic: 'Константинович',\r\n      },\r\n    ],\r\n    countOfWorks: 6,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Механика',\r\n    percents: 31,\r\n    years: { start: 2020, end: 2021 },\r\n    semester: 1,\r\n    teachers: [\r\n      { name: 'Александр', surname: 'Черкасов', patronymic: 'Васильевич' },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n        patronymic: 'Константинович',\r\n      },\r\n    ],\r\n    countOfWorks: 6,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Механика',\r\n    percents: 31,\r\n    years: { start: 2020, end: 2021 },\r\n    semester: 1,\r\n    teachers: [\r\n      { name: 'Александр', surname: 'Черкасов', patronymic: 'Васильевич' },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n        patronymic: 'Константинович',\r\n      },\r\n    ],\r\n    countOfWorks: 6,\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'Механика',\r\n    percents: 31,\r\n    years: { start: 2020, end: 2021 },\r\n    semester: 1,\r\n    teachers: [\r\n      { name: 'Александр', surname: 'Черкасов', patronymic: 'Васильевич' },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n        patronymic: 'Константинович',\r\n      },\r\n    ],\r\n    countOfWorks: 6,\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Механика',\r\n    percents: 31,\r\n    years: { start: 2020, end: 2021 },\r\n    semester: 1,\r\n    teachers: [\r\n      { name: 'Александр', surname: 'Черкасов', patronymic: 'Васильевич' },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n        patronymic: 'Константинович',\r\n      },\r\n    ],\r\n    countOfWorks: 6,\r\n  },\r\n  {\r\n    id: 8,\r\n    title: 'Механика, Механика, Механика Механика, Механика Механика',\r\n    percents: 31,\r\n    years: { start: 2020, end: 2021 },\r\n    semester: 1,\r\n    teachers: [\r\n      { name: 'Александр', surname: 'Черкасов', patronymic: 'Васильевич' },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n        patronymic: 'Константинович',\r\n      },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n        patronymic: 'Константинович',\r\n      },\r\n      {\r\n        name: 'Тимофей',\r\n        surname: 'Бочаров',\r\n        patronymic: 'Константинович',\r\n      },\r\n    ],\r\n    countOfWorks: 6,\r\n  },\r\n]\r\n\r\ntype CalendarWorks = {\r\n  date: Date\r\n  works: Array<{\r\n    title: string\r\n    allCount: number\r\n    count: number\r\n    checkingCount: number\r\n    percent: number\r\n  }>\r\n}\r\n\r\nexport const calendarWorksMock: CalendarWorks[] = [\r\n  {\r\n    date: new Date(2021, 3, 2),\r\n    works: [\r\n      {\r\n        title: 'Механика',\r\n        allCount: 6,\r\n        count: 4,\r\n        checkingCount: 2,\r\n        percent: 87,\r\n      },\r\n      {\r\n        title: 'Оптика и квантовая физика',\r\n        allCount: 6,\r\n        count: 4,\r\n        checkingCount: 1,\r\n        percent: 69,\r\n      },\r\n      {\r\n        title: 'Элементы астрофизики',\r\n        allCount: 6,\r\n        count: 4,\r\n        checkingCount: 2,\r\n        percent: 18,\r\n      },\r\n      {\r\n        title: 'Механика',\r\n        allCount: 6,\r\n        count: 4,\r\n        checkingCount: 2,\r\n        percent: 87,\r\n      },\r\n      {\r\n        title: 'Механика',\r\n        allCount: 6,\r\n        count: 4,\r\n        checkingCount: 2,\r\n        percent: 87,\r\n      },\r\n      {\r\n        title: 'Механика',\r\n        allCount: 6,\r\n        count: 4,\r\n        checkingCount: 2,\r\n        percent: 87,\r\n      },\r\n    ],\r\n  },\r\n]\r\n","import { combine, createDomain } from 'effector'\n\ntype Path = {\n  title: string\n  path: string\n}\n\nconst breadCrumbsDomain = createDomain('bread crumbs')\n\nconst setPath = breadCrumbsDomain.createEvent<Path>()\nconst addPath = breadCrumbsDomain.createEvent<Path>()\nconst addFullPath = breadCrumbsDomain.createEvent<Path[]>()\n\nconst $path = breadCrumbsDomain\n  .createStore<Path[]>([])\n  .on(addPath, (path, item) => [...path, item])\n  .on(setPath, (_, path) => [path])\n  .on(addFullPath, (path, fullPath) => [...path, ...fullPath])\n\nexport const breadCrumbsModel = {\n  $store: combine<{ path: Path[] }>({\n    path: $path,\n  }),\n  input: {\n    addPath,\n    setPath,\n    addFullPath,\n  },\n}\n","import {FIO, Resource, Status, Task, TaskType} from \"../models/types\";\r\n\r\nexport type Course = {\r\n  id: string\r\n  name: string\r\n  authors: FIO[]\r\n  teachers: FIO[]\r\n  tasks: Task[]\r\n  resources: Resource[]\r\n}\r\n\r\nexport const CourseMock: Course = {\r\n  id: '0',\r\n  name: 'Концепции и модели физики. Механика',\r\n  authors: [\r\n    {\r\n      surname: 'Иван',\r\n      name: 'Иванов',\r\n      patronymic: 'Иванович',\r\n    },\r\n    {\r\n      surname: 'Сидоров',\r\n      name: 'Роман',\r\n    },\r\n  ],\r\n  teachers: [\r\n    {\r\n      surname: 'Колесников',\r\n      name: 'Михаил',\r\n      patronymic: 'Юрьевич',\r\n    },\r\n  ],\r\n  tasks: [\r\n    {\r\n      id: '0',\r\n      name: 'Кинематика материальной точки',\r\n      period: [new Date(2021, 0, 1), new Date(2021, 1, 28)],\r\n      countOfTry: [4, 10],\r\n      status: Status.FOUR,\r\n      type: TaskType.TEST,\r\n    },\r\n    {\r\n      id: '1',\r\n      name: 'Динамика материальной точки',\r\n      period: [new Date(2021, 0, 1), new Date(2021, 1, 28)],\r\n      countOfTry: [4, 10],\r\n      status: Status.DONE,\r\n      type: TaskType.MANUAL_CHECK,\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'Динамика системы частиц',\r\n      period: [new Date(2021, 0, 1), new Date(2021, 1, 28)],\r\n      countOfTry: [4, 10],\r\n      status: Status.WAITING,\r\n      type: TaskType.AUTOMATIC_CHECK,\r\n    },\r\n  ],\r\n  resources: [\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\r\n  ],\r\n}\r\n","import { combine, createDomain, forward } from 'effector'\nimport { createReEffect } from 'effector-reeffect'\nimport { createGate } from 'effector-react'\nimport { Course, CourseMock } from '../../mock/courseMock'\n\nconst getCourseFx = createReEffect({\n  handler: async (id: string) => {\n    const promise = new Promise<Course | null>((resolve, reject) => {\n      setTimeout(() => {\n        if (id === 'tmp') reject(null)\n\n        resolve(CourseMock)\n      }, 500)\n    })\n\n    const res: Course | null = await promise.then((course) => course).catch((error) => error)\n\n    return res\n  },\n})\n\nconst courseGate = createGate<string>()\n\nconst courseDomain = createDomain('course')\n\nconst $currentCourse = courseDomain.createStore<Course | null>(null).on(getCourseFx.doneData, (_, course) => course)\n\nforward({ from: courseGate.open, to: getCourseFx })\n\nexport const courseModel = {\n  $store: combine<{ currentCourse: Course | null; pending: boolean }>({\n    currentCourse: $currentCourse,\n    pending: getCourseFx.pending,\n  }),\n  courseGate,\n}\n","import { combine, createDomain, sample } from 'effector'\r\nimport { calendarWorksMock } from '../../mock/mock'\r\n\r\ntype CurrentWork = {\r\n  title: string\r\n  allCount: number\r\n  count: number\r\n  checkingCount: number\r\n  percent: number\r\n}\r\n\r\nconst calendarDomain = createDomain('calendar')\r\n\r\nconst setMonth = calendarDomain.createEvent<number>()\r\nconst setYear = calendarDomain.createEvent<number>()\r\n\r\nconst decMonth = calendarDomain.createEvent()\r\nconst incMonth = calendarDomain.createEvent()\r\n\r\nconst setDay = calendarDomain.createEvent<Date>()\r\n\r\nconst $currentYear = calendarDomain\r\n  .createStore<number>(new Date().getFullYear())\r\n  .on(setYear, (_, year) => year)\r\n  .on(setDay, (_, date) => date.getFullYear())\r\n\r\nconst $currentMonth = calendarDomain\r\n  .createStore<number>(new Date().getMonth())\r\n  .on(setMonth, (_, month) => month)\r\n  .on(decMonth, (currentMonth, _) => (currentMonth === 0 ? 11 : currentMonth - 1))\r\n  .on(incMonth, (currentMonth, _) => (currentMonth === 11 ? 0 : currentMonth + 1))\r\n  .on(setDay, (_, date) => date.getMonth())\r\n\r\nconst $currentDay = calendarDomain\r\n  .createStore<number>(new Date().getDate())\r\n  .on(setDay, (_, date) => date.getDate())\r\n  .on([$currentMonth.updates, $currentYear.updates], () => 1)\r\n  .on([incMonth, decMonth], () => 1)\r\n\r\nconst $monthCalendar = calendarDomain.createStore<Date[]>(\r\n  (function getInitialMonthCalendar() {\r\n    const today = new Date(new Date().getFullYear(), new Date().getMonth(), 1)\r\n\r\n    const predMonday =\r\n      today.getDay() === 1\r\n        ? new Date(Number(today) - 7 * 24 * 60 * 60 * 1000)\r\n        : today.getDay() === 0\r\n        ? new Date(Number(today) - 6 * 24 * 60 * 60 * 1000)\r\n        : new Date(Number(today) - (today.getDay() - 1) * 24 * 60 * 60 * 1000)\r\n\r\n    return new Array<Date>(42)\r\n      .fill(predMonday)\r\n      .map((firstMonday, index) => new Date(Number(firstMonday) + index * 24 * 60 * 60 * 1000))\r\n  })()\r\n)\r\n\r\nconst $currentWorks = calendarDomain.createStore<CurrentWork[]>(\r\n  (function () {\r\n    const currentDayWorks = calendarWorksMock.find(\r\n      (dayWorks) =>\r\n        dayWorks.date.getDate() === new Date().getDate() &&\r\n        dayWorks.date.getMonth() === new Date().getMonth() &&\r\n        dayWorks.date.getFullYear() === new Date().getFullYear()\r\n    )\r\n\r\n    return currentDayWorks?.works ?? []\r\n  })()\r\n)\r\n\r\nsample({\r\n  source: combine<{\r\n    currentMonth: number\r\n    currentYear: number\r\n  }>({\r\n    currentMonth: $currentMonth,\r\n    currentYear: $currentYear,\r\n  }),\r\n  clock: decMonth,\r\n  target: $currentYear,\r\n  fn: ({ currentMonth, currentYear }) => (currentMonth === 11 ? currentYear - 1 : currentYear),\r\n})\r\n\r\nsample({\r\n  source: combine<{\r\n    currentMonth: number\r\n    currentYear: number\r\n  }>({\r\n    currentMonth: $currentMonth,\r\n    currentYear: $currentYear,\r\n  }),\r\n  clock: incMonth,\r\n  target: $currentYear,\r\n  fn: ({ currentMonth, currentYear }) => (currentMonth === 0 ? currentYear + 1 : currentYear),\r\n})\r\n\r\nsample({\r\n  source: combine<{\r\n    currentMonth: number\r\n    currentYear: number\r\n  }>({\r\n    currentMonth: $currentMonth,\r\n    currentYear: $currentYear,\r\n  }),\r\n  clock: [$currentDay.updates, $currentMonth.updates, $currentYear.updates],\r\n  target: $monthCalendar,\r\n  fn: ({ currentMonth, currentYear }) => {\r\n    const today = new Date(currentYear, currentMonth, 1)\r\n\r\n    const predMonday =\r\n      today.getDay() === 1\r\n        ? new Date(Number(today) - 7 * 24 * 60 * 60 * 1000)\r\n        : today.getDay() === 0\r\n        ? new Date(Number(today) - 6 * 24 * 60 * 60 * 1000)\r\n        : new Date(Number(today) - (today.getDay() - 1) * 24 * 60 * 60 * 1000)\r\n\r\n    return new Array<Date>(42)\r\n      .fill(predMonday)\r\n      .map((firstMonday, index) => new Date(Number(firstMonday) + index * 24 * 60 * 60 * 1000))\r\n  },\r\n})\r\n\r\nsample({\r\n  source: combine({\r\n    currentDay: $currentDay,\r\n    currentMonth: $currentMonth,\r\n    currentYear: $currentYear,\r\n  }),\r\n  target: $currentWorks,\r\n  fn: ({ currentDay, currentMonth, currentYear }) => {\r\n    const currentDayWorks = calendarWorksMock.find(\r\n      (dayWorks) =>\r\n        dayWorks.date.getDate() === currentDay &&\r\n        dayWorks.date.getMonth() === currentMonth &&\r\n        dayWorks.date.getFullYear() === currentYear\r\n    )\r\n\r\n    return currentDayWorks?.works ?? []\r\n  },\r\n})\r\n\r\nexport const calendarModel = {\r\n  $store: combine<{\r\n    currentDay: number\r\n    currentMonth: number\r\n    currentYear: number\r\n    monthCalendar: Date[]\r\n    currentWorks: CurrentWork[]\r\n  }>({\r\n    currentDay: $currentDay,\r\n    currentMonth: $currentMonth,\r\n    currentYear: $currentYear,\r\n    monthCalendar: $monthCalendar,\r\n    currentWorks: $currentWorks,\r\n  }),\r\n  input: {\r\n    setMonth,\r\n    setYear,\r\n    decMonth,\r\n    incMonth,\r\n    setDay,\r\n  },\r\n}\r\n","import { FIO, Resource, TaskType } from '../models/types'\n\ntype DeadLine = {\n  five: Date\n  four: Date\n}\n\nexport enum TaskStatus {\n  FIVE = 'ОТЛИЧНО',\n  FOUR = 'ХОРОШО',\n  DONE = 'СДАНО',\n  WAITING = 'НЕ СДАНО',\n}\n\nexport type Task = {\n  id: string\n  name: string\n  courseName: string\n  courseID: string\n  status: TaskStatus\n  statusDate: Date | null\n  teacher: FIO\n  type: TaskType\n  deadline?: DeadLine\n  countOfTry: [number, number]\n  resources: Resource[]\n}\n\nexport const TaskMock: Task = {\n  id: '0',\n  name: 'Кинематика материальной точки',\n  courseName: 'Концепции и модели физики. Механика',\n  courseID: '0',\n  status: TaskStatus.FIVE,\n  statusDate: new Date(2021, 2, 5),\n  teacher: {\n    surname: 'Колесников',\n    name: 'Михаил',\n    patronymic: 'Юрьевич',\n  },\n  type: TaskType.AUTOMATIC_CHECK,\n  deadline: {\n    five: new Date(2021, 2, 8),\n    four: new Date(2021, 3, 10),\n  },\n  countOfTry: [4, 10],\n  resources: [\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF ',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n    'Механика, Черкасов А. В., Бочаров Т.К., БГТУ им. Шухова, 2005г. PDF',\n  ],\n}\n","import { combine, createDomain } from 'effector'\r\nimport { createGate } from 'effector-react'\r\n\r\nconst gate = createGate()\r\n\r\nconst searchDomain = createDomain('search')\r\n\r\nconst setSearch = searchDomain.createEvent<string>()\r\n\r\nconst $search = searchDomain\r\n  .createStore<string>('')\r\n  .on(setSearch, (_, search) => search)\r\n  .reset(gate.open)\r\n\r\nexport const searchModel = {\r\n  $store: combine<{ search: string }>({\r\n    search: $search,\r\n  }),\r\n  input: {\r\n    setSearch,\r\n  },\r\n  gate,\r\n}\r\n","import { combine, createDomain } from 'effector'\r\nimport { createGate } from 'effector-react'\r\n\r\ntype TUser = {\r\n  name: string\r\n  surname: string\r\n  percents: string\r\n}\r\n\r\nconst gate = createGate()\r\n\r\nconst userDomain = createDomain('user')\r\n\r\n// TODO ReEffect and null\r\nconst $user = userDomain.createStore<TUser | null>({ name: 'Киша', surname: 'Молесников', percents: '72' })\r\n\r\nexport const userModel = {\r\n  $store: combine<{ user: TUser | null }>({\r\n    user: $user,\r\n  }),\r\n  gate,\r\n}\r\n","import { combine, createDomain, forward } from 'effector'\nimport { createReEffect } from 'effector-reeffect'\nimport { Task, TaskMock } from '../../mock/taskMock'\nimport { createGate } from 'effector-react'\n\nconst getTaskFx = createReEffect({\n  handler: async (id: string) => {\n    const promise = new Promise<Task | null>((resolve, reject) => {\n      setTimeout(() => {\n        if (id === 'tmp') reject(null)\n\n        resolve(TaskMock)\n      }, 500)\n    })\n\n    const res: Task | null = await promise.then((task) => task).catch((error) => error)\n\n    return res\n  },\n})\n\nconst taskGate = createGate<string>()\n\nconst taskDomain = createDomain('task')\n\nconst $task = taskDomain.createStore<Task | null>(null).on(getTaskFx.doneData, (_, task) => task)\n\nforward({\n  from: taskGate.open,\n  to: getTaskFx,\n})\n\nexport const taskModel = {\n  $store: combine<{ task: Task | null; pending: boolean }>({\n    task: $task,\n    pending: getTaskFx.pending,\n  }),\n  taskGate,\n}\n","import { sample, guard } from 'effector'\n\nimport { breadCrumbsModel } from './breadCrumbs'\nimport { courseModel } from './course'\nimport { calendarModel } from './calendar'\nimport { searchModel } from './search'\nimport { userModel } from './user'\nimport { taskModel } from './task'\n\nimport { routesPaths } from '../routes/config'\n\nsample({\n  source: guard({\n    source: courseModel.$store,\n    filter: ({ currentCourse }) => currentCourse !== null,\n  }),\n  clock: courseModel.$store.map((store) => store.currentCourse).updates,\n  target: breadCrumbsModel.input.addPath,\n  fn: ({ currentCourse }) => ({\n    title: currentCourse!.name,\n    path: `${routesPaths.courses.path}/${currentCourse!.id}`,\n  }),\n})\n\nsample({\n  source: guard({\n    source: taskModel.$store,\n    filter: ({ task }) => task !== null,\n  }),\n  clock: taskModel.$store.map((store) => store.task).updates,\n  target: breadCrumbsModel.input.addFullPath,\n  fn: ({ task }) => [\n    { title: task!.courseName, path: `${routesPaths.courses.path}/${task!.courseID}` },\n    {\n      title: task!.name,\n      path: `${routesPaths.courses.path}/${task!.id}`,\n    },\n  ],\n})\n\nexport { breadCrumbsModel, courseModel, calendarModel, searchModel, userModel, taskModel }\n","import React, { Suspense } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { routes } from './config'\nimport { breadCrumbsModel } from '../models'\n\nexport const Routes = () => {\n  React.useEffect(() => {\n    console.log(\n      {\n        title: routes.find((route) => route.path === `/${location.pathname.split('/').pop()}`)?.title ?? '404',\n        path: `/${location.pathname.split('/').pop()}`,\n      },\n      location.pathname\n    )\n    breadCrumbsModel.input.setPath({\n      title: routes.find((route) => route.path === `/${location.pathname.split('/').pop()}`)?.title ?? '404',\n      path: `/${location.pathname.split('/').pop()}`,\n    })\n  }, [])\n\n  return (\n    <Suspense fallback={null}>\n      <Switch>\n        {routes.map((route) => (\n          <Route key={route.path} path={route.path} exact={route.exact} component={route.component} />\n        ))}\n        <Redirect exact from={'/'} to={'/courses'} />\n        <Redirect from={'*'} to={'/404'} />\n      </Switch>\n    </Suspense>\n  )\n}\n","import { createBrowserHistory } from 'history'\r\n\r\nexport const browserHistory = createBrowserHistory()\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Router } from 'react-router-dom'\r\n\r\nimport { Routes } from './routes'\r\n\r\nimport { browserHistory } from './browserHistory'\r\n\r\nimport './index.scss'\r\n\r\nconst Index = () => {\r\n  return (\r\n    <Router history={browserHistory}>\r\n      <Routes />\r\n    </Router>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Index />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}